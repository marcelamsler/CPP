#include <iterator>
#include <algorithm>
#include <string>

int chcount (std::istream &in) {
	int size{0};
	std::istreambuf_iterator<char> it{in};

	while(it != std::istreambuf_iterator<char>{}) {
		it++;
		size++;
	}
	return size;

}

int wcount (std::istream &in) {
	return std::distance(std::istreambuf_iterator<char>{in},std::istreambuf_iterator<char>{});

}

int acount (std::istream &in) {
	return std::count(std::istreambuf_iterator<char>{in},std::istreambuf_iterator<char>{}, 'a');

}

int countn (std::istream &in) {

	return std::count(std::istreambuf_iterator<char>{in},std::istreambuf_iterator<char>{}, '\n');

}

int sumi (std::istream &in) {
	return std::accumulate(std::istream_iterator<int>{in},std::istream_iterator<int>{}, 0);

}

std::vector<std::vector<int>> multab (std::istream &in) {
	int multvalue{0};
	in >> multvalue;
	std::vector<std::vector<int>> w{};
	int i{1};
	std::generate_n(std::back_inserter(w),multvalue,[&i, &multvalue]{
		std::vector<int> innervector{};
		int j{2};
		std::generate_n(std::back_inserter(innervector),multvalue,[&j, &i]{return j*i++;});
		return innervector;
	});
	return w;

}



